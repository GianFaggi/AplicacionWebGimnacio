@model AplicacionWebGym.Models.DatosPersona

@{
    ViewBag.Title = "Editar";
}

<h2>Modificar datos del cliente</h2>

@using (Html.BeginForm("Editar", "DPFuncional", FormMethod.Post, new { @id = "frmEditar" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.IdDatos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IdDatos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IdDatos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.sex,
                                  new List<SelectListItem>()
                                  {
                                     new SelectListItem() { Text = "Masculino", Value =  "1"},
                                     new SelectListItem() { Text = "Femenino", Value =  "2"},
                                     new SelectListItem() { Text = "X", Value =  "3"},
                                  },
                                  new { htmlAttributes = new { @class = "form-control" } }
                                )
            @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdTurnos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IdTurnos,
                                  new List<SelectListItem>()
                                  {
                                     new SelectListItem() { Text = "2 de la tarde", Value =  "1"},
                                     new SelectListItem() { Text = "3 de la tarde", Value =  "2"},
                                     new SelectListItem() { Text = "7 de la tarde", Value =  "3"},
                                     new SelectListItem() { Text = "8 de la tarde", Value =  "4"}
                                  },
                                  new { htmlAttributes = new { @class = "form-control" } }
                                )
            @Html.ValidationMessageFor(model => model.IdTurnos, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" hidden>
        @Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IdUsuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver a la Lista", "Lista_Personas", null, new { @class = "btn btn-default" })
</div>
<script>
        var frmEditar = document.getElementById("frmEditar");
        frmEditar.onsubmit = function (e) {
            e.preventDefault();
            if (confirm("Desea GUARDAR los cambios") == 1) {
                frmEditar.submit();
            }
        }
</script>